@import "Hexagon.scss";

$cardSymbolSize: 30px;
$borderSize: 3px;
$hexColor-border: lightBlue;
$hexColor-inner: black;
$hexColor-text: lightBlue;
$circleColor-border: lightPink;
$circleColor-inner: black;
$circleColor-text: lightPink;
$squareColor-border: lightGreen;
$squareColor-inner: black;
$squareColor-text: lightGreen;
$eventColor: $color-primary-2;
$eventBorderColor: $color-primary-0;
$eventTop: 70px;
$eventTextColor: black;
$deckPeek: 50px;
$deckRightMargin: 2px;
$deckColor: $color-primary-4;
$cardsLeftColor: $color-primary-2;

#card {
    .hexagon.border {
        @include hex($cardSymbolSize, $hexColor-border, horizontal);
        .inner {
            $width: $cardSymbolSize - ($borderSize * 3);
            @include hex($width, $hexColor-inner, horizontal);
            position: absolute;
            left: $borderSize - floor($cardSymbolSize / 4);
            top: round($borderSize * 1.3);
            z-index: 2;
            color: $hexColor-text;
        }
        .inner[data-val="10"] {
            font-size: 19px;
            text-indent: -5px;
        }
        .inner:after, .inner:before {
            z-index: -1;
        }
    }
    
    .circle.border {
        border-radius: 90px;
        width: $cardSymbolSize;
        height: $cardSymbolSize;
        background-color: $circleColor-border;
        .inner {
            border-radius: 90px;
            background-color: $circleColor-inner;
            width: $cardSymbolSize - ($borderSize * 3);
            height: $cardSymbolSize - ($borderSize * 3);
            position: absolute;
            left: ceil($cardSymbolSize / 4) - $borderSize;
            top: floor($cardSymbolSize / 4) - $borderSize;
            color: $circleColor-text;
        }
    }

    .square {
        background-color: $squareColor-inner;
        border: $borderSize * 1.5 solid $squareColor-border;
        color: $squareColor-text;
        width: $cardSymbolSize;
        height: $cardSymbolSize;
    }
    
    .circle, .square, .hexagon {
        text-align: center;
        font-size: $cardSymbolSize - $borderSize * 3;
        font-weight: bold;
        top: 10px;
        position: absolute;
        z-index: 1;
    }
    
    
    .circle {
        left: 10px;
    }
    .square {
        left: 45px;
    }
    .hexagon {
        left: 79px;
    }
    
    .gold, .friendly {
        margin-top: 45px;
        margin-left: 5px;
        display: inline-block;
    }
    
    ul {
        top: $eventTop;
        left: 10px;
        width: $cardWidth - 20;
        position: absolute;
        .event {
            margin-left: 0px;
            margin-bottom: 2px;
            display: inline-block;
            background-color: $eventColor;
            color: $eventTextColor;
            position: relative;
            border: 1px solid $eventBorderColor;
            width: 100%;
            
            .era {
                font-size: 20px;
            }
            
            .expr {
                float: right;
            }
        }
    }
    
    .id {
        position: absolute;
        right: 10px;
        top: 50px;
    }
}

#card {
    background-color: $deckColor;
    position: fixed;
    width: $cardWidth;
    height: $cardHeight;
    z-index: 100;
    bottom: 3px;
    right: $cardWidth + $deckRightMargin * 2;
}

@include bigger-than-map {
#card.pushed {
    right: $deckPeek + $deckRightMargin;
}
#card.shown {
    bottom: 3px;
}
}

@include smaller-than-map {
#card.pushed {
    right: $deckPeek + $deckRightMargin;
    bottom: -1*($cardHeight - $eventTop);
}
#card.shown {
    bottom: 0px;
}
}

#deck {
    background-color: $deckColor;
    position: fixed;
    width: $cardWidth;
    height: $cardHeight;
    z-index: 100;
    
    right: $deckRightMargin;
    bottom: 3px;

    #cardsLeft {
        color: $cardsLeftColor;
        font-size: 54px;
        width: 100%;
        display: block;
        text-align: center;
        top: 56px;
        position: absolute;
    }
    
    button.draw {
        position: absolute;
        width: 100%;
        height: 100%;
        opacity: 0.2;
    }
    
    button.stop {
        position: absolute;
        width: 100%;
        height: 50px;
        top: -50px;
        opacity: 0.2;
    }
    
    input {
        position: absolute;
        top: 152px;
        left: $cardWidth / 4;
        width: 50%;
    }
}

@include bigger-than-map {
#deck.pushed {
    right: -1*($cardWidth - $deckPeek);
    //top: $cardHeight + (2 * 20);
    
    #cardsLeft {
        width: $deckPeek;
        text-align: left;
        font-size: 28px;
    }
}
}

@include smaller-than-map {
#deck.pushed {
    right: -1*($cardWidth - $deckPeek);
    //top: $cardHeight + (2 * 20);
    bottom: -1*($cardHeight / 2);
    
    #cardsLeft {
        width: $deckPeek;
        text-align: left;
        font-size: 28px;
    }
}
}